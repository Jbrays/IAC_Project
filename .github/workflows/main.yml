# .github/workflows/main.yml
name: CI/CD Pipeline for Elearning Platform

on:
  push:
    branches:
      - master # O la rama principal que uses
  pull_request:
    branches:
      - master

jobs:
  quality-and-security-checks:
    name: Quality and Security Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          # Detener el build si hay errores de Python, pero permitir advertencias.
          # --count muestra el número total de errores.
          # --show-source muestra el código problemático.
          # --statistics muestra un conteo de cada error/advertencia.
          flake8 logica_recursos/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Security scan with Bandit
        run: |
          bandit -r logica_recursos/

      - name: Run unit tests with pytest
        run: |
          pytest --cov=logica_recursos --cov-report=xml

      - name: Infrastructure security scan with tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: .

  deploy-to-aws:
    name: Deploy to AWS
    needs: quality-and-security-checks # Depende del éxito del job anterior
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push' # Solo desplegar en push a master

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0 # O la versión que uses

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve
